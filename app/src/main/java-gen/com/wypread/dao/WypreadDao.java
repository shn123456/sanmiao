package com.wypread.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import com.sanmiao.wypread.Wypread;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "WYPREAD".
*/
public class WypreadDao extends AbstractDao<Wypread, Long> {

    public static final String TABLENAME = "WYPREAD";

    /**
     * Properties of entity Wypread.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Name = new Property(1, String.class, "name", false, "NAME");
        public final static Property BookPath = new Property(2, String.class, "bookPath", false, "BOOK_PATH");
        public final static Property ImgPath = new Property(3, String.class, "imgPath", false, "IMG_PATH");
        public final static Property ReadPosition = new Property(4, Integer.class, "readPosition", false, "READ_POSITION");
        public final static Property ReadJindu = new Property(5, String.class, "readJindu", false, "READ_JINDU");
        public final static Property QuitePath = new Property(6, String.class, "quitePath", false, "QUITE_PATH");
        public final static Property QuiteChapter = new Property(7, String.class, "quiteChapter", false, "QUITE_CHAPTER");
        public final static Property QuitePosition = new Property(8, String.class, "quitePosition", false, "QUITE_POSITION");
        public final static Property WriteName = new Property(9, String.class, "writeName", false, "WRITE_NAME");
        public final static Property Classfiy = new Property(10, String.class, "classfiy", false, "CLASSFIY");
        public final static Property IsDown = new Property(11, String.class, "isDown", false, "IS_DOWN");
        public final static Property QuiteJindu = new Property(12, String.class, "quiteJindu", false, "QUITE_JINDU");
        public final static Property FromFile = new Property(13, String.class, "fromFile", false, "FROM_FILE");
    };


    public WypreadDao(DaoConfig config) {
        super(config);
    }
    
    public WypreadDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"WYPREAD\" (" + //
                "\"_id\" INTEGER PRIMARY KEY ," + // 0: id
                "\"NAME\" TEXT," + // 1: name
                "\"BOOK_PATH\" TEXT," + // 2: bookPath
                "\"IMG_PATH\" TEXT," + // 3: imgPath
                "\"READ_POSITION\" INTEGER," + // 4: readPosition
                "\"READ_JINDU\" TEXT," + // 5: readJindu
                "\"QUITE_PATH\" TEXT," + // 6: quitePath
                "\"QUITE_CHAPTER\" TEXT," + // 7: quiteChapter
                "\"QUITE_POSITION\" TEXT," + // 8: quitePosition
                "\"WRITE_NAME\" TEXT," + // 9: writeName
                "\"CLASSFIY\" TEXT," + // 10: classfiy
                "\"IS_DOWN\" TEXT," + // 11: isDown
                "\"QUITE_JINDU\" TEXT," + // 12: quiteJindu
                "\"FROM_FILE\" TEXT);"); // 13: fromFile
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"WYPREAD\"";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, Wypread entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String name = entity.getName();
        if (name != null) {
            stmt.bindString(2, name);
        }
 
        String bookPath = entity.getBookPath();
        if (bookPath != null) {
            stmt.bindString(3, bookPath);
        }
 
        String imgPath = entity.getImgPath();
        if (imgPath != null) {
            stmt.bindString(4, imgPath);
        }
 
        Integer readPosition = entity.getReadPosition();
        if (readPosition != null) {
            stmt.bindLong(5, readPosition);
        }
 
        String readJindu = entity.getReadJindu();
        if (readJindu != null) {
            stmt.bindString(6, readJindu);
        }
 
        String quitePath = entity.getQuitePath();
        if (quitePath != null) {
            stmt.bindString(7, quitePath);
        }
 
        String quiteChapter = entity.getQuiteChapter();
        if (quiteChapter != null) {
            stmt.bindString(8, quiteChapter);
        }
 
        String quitePosition = entity.getQuitePosition();
        if (quitePosition != null) {
            stmt.bindString(9, quitePosition);
        }
 
        String writeName = entity.getWriteName();
        if (writeName != null) {
            stmt.bindString(10, writeName);
        }
 
        String classfiy = entity.getClassfiy();
        if (classfiy != null) {
            stmt.bindString(11, classfiy);
        }
 
        String isDown = entity.getIsDown();
        if (isDown != null) {
            stmt.bindString(12, isDown);
        }
 
        String quiteJindu = entity.getQuiteJindu();
        if (quiteJindu != null) {
            stmt.bindString(13, quiteJindu);
        }
 
        String fromFile = entity.getFromFile();
        if (fromFile != null) {
            stmt.bindString(14, fromFile);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public Wypread readEntity(Cursor cursor, int offset) {
        Wypread entity = new Wypread( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // name
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // bookPath
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // imgPath
            cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4), // readPosition
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // readJindu
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // quitePath
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // quiteChapter
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // quitePosition
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // writeName
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // classfiy
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // isDown
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // quiteJindu
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13) // fromFile
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, Wypread entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setName(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setBookPath(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setImgPath(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setReadPosition(cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4));
        entity.setReadJindu(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setQuitePath(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setQuiteChapter(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setQuitePosition(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setWriteName(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setClassfiy(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setIsDown(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setQuiteJindu(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setFromFile(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(Wypread entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(Wypread entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
